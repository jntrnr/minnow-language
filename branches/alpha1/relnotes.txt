Minnow 1.0 alpha 1 - Release Notes
(see http://www.minnow-lang.org for more information)

[Features]

    * Efficient, lightweight actors
    * Efficient, lightweight message passing
    * Multicore aware runtime system with active workload rebalance
    * Objects, with methods and attributes
    * Simple arrays
    * Basic foreign function interface via the "extern" keyword
    * If/Else blocks
    * While blocks

[Known issues]

    * Embedded function calls like "y = f(g(x))" may not work correctly under some circumstances, where the timeslice is given up in between the calls to g(x) and f(x).  As a workaround, do not embed function calls in this alpha.
    * Scope dereference via the '.' operator only works on variables, not more complex items like array dereferences and function return values.  As a workaround, store the reference in a temporary, and access it that way.
    * Multidimensional/embedded arrays are not supported
    * Function/action/method overloading is not yet supported

Note to Windows Users: You may need to use the compile line on line 135 of src/minnow/main.cpp, changing it to meet what your system needs.

Please Note: The Minnow programming language, as presented in alpha 1, is subject to change.  Though I don't think it will change much (beyond some syntax additions) between now and the final 1.0 release, it's worth keeping an eye on the website for notices.

It's also worth noting that this is an alpha, so it will probably have strange issues that still need to get worked out.  If you find one, let us know.

[Requirements]

    * gcc/g++ (or something equivalent)
    * boost 1.35 (or greater)

[Usage]

Compile the "minnow" executable from the root directory using the commands:

    * cmake -DCMAKE_BUILD_TYPE=gdb .
    * make

This will build the systems with -O3, while still keeping gdb information.  Once compiled, you can compile one of the samples from the root directory by running:

In Linux and OS X

    * ./minnow samples/hello.mno -o samples/hello.bin

In Windows:

    * minnow.exe samples/hello.mno -o samples/hello.exe

The "-o" option will convert the minnow source to C++ and then use one of the lines in main.cpp to try to compile it to an executable.  If the compile doesn't work for you, try changing the line to better match your setup.  If that still doesn't seem to fix it, you can work on the C++ output directly by creating it instead of an executable using the "-c" option instead of the "-o" option:

    * ./minnow samples/hello.mno -c samples/hello.cpp

